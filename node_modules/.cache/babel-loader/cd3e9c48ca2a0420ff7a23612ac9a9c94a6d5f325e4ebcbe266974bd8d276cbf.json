{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.job\n      })\n    }).then(this._getResponseData);\n  }\n  setUserAvatar(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getResponseData);\n  }\n  addCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link\n      })\n    }).then(this._getResponseData);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._getResponseData);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n  headers: {\n    authorization: '2a75c116-0f87-4f01-83e5-3b330104bfdd',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_authorization","authorization","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","then","getCards","setUserInfo","data","method","body","JSON","stringify","name","username","about","job","setUserAvatar","avatar","addCard","title","link","addLike","cardId","deleteCard","deleteLike","changeLikeCardStatus","isLiked","_url","api"],"sources":["/Users/liubov/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n      this._baseUrl = options.baseUrl;\n      this._headers = options.headers;\n      this._authorization = options.headers.authorization;\n    }\n    _getResponseData(res) {\n      if (!res.ok) {\n          return Promise.reject(`Ошибка: ${res.status}`);\n      }\n      return res.json();\n    }\n    getUserInfo() {\n      return fetch(`${this._baseUrl}/users/me`, {\n        headers: {\n          authorization: this._authorization\n        }\n      })\n      .then(this._getResponseData);\n    }\n    getCards() {\n      return fetch(`${this._baseUrl}/cards`, {\n        headers: {\n          authorization: this._authorization\n        }\n      })\n      .then(this._getResponseData);\n    }\n    setUserInfo(data) {\n      return fetch(`${this._baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.username,\n          about: data.job\n        })\n      })\n      .then(this._getResponseData);\n    }\n    setUserAvatar(data) {\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      })\n      .then(this._getResponseData);\n    }\n    addCard(data) {\n      return fetch(`${this._baseUrl}/cards`, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.title,\n          link: data.link\n        })\n      })\n      .then(this._getResponseData);\n    }\n    addLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'PUT',\n        headers: {\n          authorization: this._authorization\n        }\n      })\n      .then(this._getResponseData);\n    }\n    deleteCard(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._authorization\n        }\n      })\n      .then(this._getResponseData);\n    }\n    deleteLike(cardId) {\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n        method: 'DELETE',\n        headers: {\n          authorization: this._authorization\n        }\n      })\n      .then(this._getResponseData);\n    }\n    \n     changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/likes/${cardId}`,\n      {\n        method: isLiked ? \"PUT\" : \"DELETE\",\n        headers: this._headers\n      })\n      .then(res => this._getResponseData(res))\n    }\n  }\n  \n  const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-66',\n    headers: {\n      authorization: '2a75c116-0f87-4f01-83e5-3b330104bfdd',\n      'Content-Type': 'application/json'\n    }\n  });\n  export default api"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}